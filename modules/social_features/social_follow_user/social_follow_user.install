<?php

/**
 * @file
 * Install, update and uninstall functions for the social_follow_user module.
 */

use Symfony\Component\Yaml\Yaml;

/**
 * Implements hook_install().
 *
 * Perform actions related to the installation of social_follow_user.
 */
function social_follow_user_install(): void {
  // Grant the default permissions for this feature.
  $permissions = [
    'flag follow_user',
    'unflag follow_user',
  ];

  foreach (['verified', 'contentmanager'] as $role_id) {
    user_role_grant_permissions($role_id, $permissions);
  }

  // Allow SM to configure visibility for Social Follow User feature.
  $permissions[] = 'administer social_follow_user settings';
  user_role_grant_permissions('sitemanager', $permissions);

  // Display hero & statistic block on the following users/followers pages.
  $config_names = [
    'block.block.socialblue_profile_hero_block',
    'block.block.socialblue_profile_statistic_block',
  ];
  foreach ($config_names as $config_name) {
    $config = \Drupal::service('config.factory')->getEditable($config_name);

    if (!empty($config->getRawData())) {
      $pages = $config->get('visibility.request_path.pages');
      $pages .= "\r\n/user/*/following-users";
      $pages .= "\r\n/user/*/followers";
      $config->set('visibility.request_path.pages', $pages);
      $config->save();
    }
  }

  // Update statistic profile view mode.
  $config = \Drupal::service('config.factory')
    ->getEditable('core.entity_view_display.profile.profile.statistic');

  $data = [
    'weight' => 5,
    'region' => 'content',
    'settings' => [],
    'third_party_settings' => [],
  ];

  $config->set('content.social_follow_user', $data);
  $config->set('content.social_following_user', $data);
  $config->save();
}

/**
 * Create a new view display for profile preview.
 */
function social_follow_user_update_11201(): void {
  $config_names = [
    'core.entity_view_display.profile.profile.preview',
    'core.entity_view_mode.profile.preview',
  ];

  $path = drupal_get_path('module', 'social_follow_user') . '/config/static/';

  foreach ($config_names as $config_name) {
    $config_file = $path . $config_name . '_11201.yml';

    if (is_array($settings = Yaml::parseFile($config_file))) {
      \Drupal::configFactory()->getEditable($config_name)
        ->setData($settings)->save(TRUE);
    }
  }
}
