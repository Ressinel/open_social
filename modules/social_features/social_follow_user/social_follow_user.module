<?php

/**
 * @file
 * The Social Follow User module.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Access\AccessResultInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\flag\FlagInterface;
use Drupal\profile\Entity\ProfileInterface;

/**
 * Implements hook_entity_base_field_info_alter().
 */
function social_follow_user_entity_base_field_info_alter(array &$fields, EntityTypeInterface $entity_type): void {
  if ($entity_type->id() === 'profile') {
    /** @var \Drupal\Core\Field\BaseFieldDefinition[] $fields */
    $fields['uid']->setDisplayConfigurable('view', TRUE);
  }
}

/**
 * Implements hook_entity_extra_field_info().
 */
function social_follow_user_entity_extra_field_info(): array {
  return [
    'profile' => [
      'profile' => [
        'display' => [
          'social_follow_user' => [
            'label' => t('Followers'),
            'description' => t('The number of users who are followed.'),
            'weight' => 20,
            'visible' => FALSE,
          ],
        ],
      ],
    ],
  ];
}

/**
 * Implements hook_entity_view_display_alter().
 */
function social_follow_user_entity_view_display_alter(EntityViewDisplayInterface $display, array $context): void {
  if ($context['entity_type'] !== 'profile') {
    return;
  }

  // Follow button appears on listed profile display modes.
  $allowed_display_modes = ['statistic'];

  // Allow other modules to change the list.
  \Drupal::moduleHandler()->alter('social_follow_user_profile_modes', $allowed_display_modes);

  if (!in_array($context['view_mode'], $allowed_display_modes)) {
    // By default, flag module add flags to all entity view display modes.
    // We want hide "Follow" button for the list of display modes.
    $display->removeComponent('flag_follow_user');
  }
}

/**
 * Implements hook_follow_user_flag_action_access().
 */
function social_follow_user_flag_action_access(string $action, FlagInterface $flag, AccountInterface $account, EntityInterface $flaggable = NULL): AccessResultInterface {
  return AccessResult::forbiddenIf(
    $flaggable instanceof ProfileInterface &&
    $flaggable->getOwnerId() === $account->id(),
    'User should not be able to follow own profile.',
  );
}
