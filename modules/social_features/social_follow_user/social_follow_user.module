<?php

/**
 * @file
 * The Social Follow User module.
 */

use Drupal\Component\Utility\Html;
use Drupal\Core\Access\AccessResult;
use Drupal\Core\Access\AccessResultInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\flag\FlagInterface;
use Drupal\profile\Entity\ProfileInterface;

/**
 * Implements hook_entity_view_display_alter().
 */
function social_follow_user_entity_view_display_alter(EntityViewDisplayInterface $display, array $context): void {
  if ($context['entity_type'] !== 'profile') {
    return;
  }

  // Remove field from display modes if "follow user" feature is disabled.
  if (!\Drupal::config('social_follow_user.settings')->get('status')) {
    if ($display->getComponent('flag_follow_user')) {
      $display->removeComponent('flag_follow_user');
      return;
    }
  }

  // Follow button appears on listed profile display modes.
  $allowed_display_modes = ['statistic'];

  // Allow other modules to change the list.
  \Drupal::moduleHandler()->alter('social_follow_user_profile_modes', $allowed_display_modes);

  if (!in_array($context['view_mode'], $allowed_display_modes)) {
    // By default, flag module add flags to all entity view display modes.
    // We want hide "Follow" button for the list of display modes.
    $display->removeComponent('flag_follow_user');
  }
}

/**
 * Implements hook_follow_user_flag_action_access().
 */
function social_follow_user_flag_action_access(string $action, FlagInterface $flag, AccountInterface $account, EntityInterface $flaggable = NULL): AccessResultInterface {
  return AccessResult::forbiddenIf(
    $flaggable instanceof ProfileInterface &&
    $flaggable->getOwnerId() === $account->id(),
    'User should not be able to follow own profile.',
  );
}

/**
 * Implements hook_preprocess_HOOK().
 */
function social_follow_user_preprocess_field__field_profile_image(array &$variables): void {
  if ($variables['element']['#view_mode'] === 'compact_notification') {
    /** @var \Drupal\profile\Entity\ProfileInterface $profile */
    $profile = $variables['element']['#object'];

    if ($profile->access('view')) {
      $attributes = &$variables['items'][0]['content']['#item_attributes'];
      $attributes['id'] = Html::getUniqueId('profile-preview');
      $attributes['data-profile'] = $profile->id();
      $variables['#attached']['library'][] = 'social_follow_user/preview';
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function social_follow_user_preprocess_profile(array &$variables): void {
  if ($variables['elements']['#view_mode'] === 'small_teaser') {
    /** @var \Drupal\profile\Entity\ProfileInterface $profile */
    $profile = $variables['profile'];

    if ($profile->access('view')) {
      /** @var \Drupal\Core\Template\Attribute $attributes */
      $attributes = $variables['link_attributes'];

      $attributes
        ->setAttribute('id', Html::getUniqueId('profile-preview'))
        ->setAttribute('data-profile', (string) $profile->id());

      $variables['#attached']['library'][] = 'social_follow_user/preview';
    }
  }
}
